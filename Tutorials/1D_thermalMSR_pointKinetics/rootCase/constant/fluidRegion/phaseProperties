/*--------------------------------*- C++ -*----------------------------------*\
|       ______          _   __           ______                               |
|      / ____/  ___    / | / /          / ____/  ____   ____ _   ____ ___     |
|     / / __   / _ \  /  |/ /  ______  / /_     / __ \ / __ `/  / __ `__ \    |
|    / /_/ /  /  __/ / /|  /  /_____/ / __/    / /_/ // /_/ /  / / / / / /    |
|    \____/   \___/ /_/ |_/          /_/       \____/ \__,_/  /_/ /_/ /_/     |
|    Copyright (C) 2015 - 2022 EPFL                                           |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// ------------------------------------------------------------------------- //
// --- THERMAL-HYDRAULIC TYPE ---------------------------------------------- //
// ------------------------------------------------------------------------- //

thermalHydraulicsType    "onePhase";

fluidProperties
{
    initialPowerDensity
    {
        "core"              3e+08;
    }
}

// ------------------------------------------------------------------------- //
// --- STRUCTURES PROPERTIES ----------------------------------------------- //
// ------------------------------------------------------------------------- //

structureProperties
{    
    // Parallel slabs of graphite, 4 cm thick, with 1 cm thick slab channel
    "core"
    {
        volumeFraction      0.8;
        Dh                  0.02;
 
        //2cm of heated graphite (half slab), 30W/mk conductivity
        powerModel 
        {
            type                lumpedNuclearStructure;
            volumetricArea      40;
            powerDensity        5e6; // Power density smeared over the entire
                                     // structure
            nodesNumber         1; // Number of nodes
            nodeFuel            0; // Define which node temperature is used
                                   // to paramtrize XS according to 
                                   // nuclearDataFuelTemp
            nodeClad            0; // Define which node temperature is used
                                   // to paramtrize XS according to 
                                   // nuclearDataCladExp. Of course, it does 
                                   // not have to represent a cladding. It
                                   // could be used to paramtrize over the
                                   // graphite temperature in PBRs
            heatConductances    (450000 225000); // Heat conductances from
                                                 // average to max (6*k/Dtot^2), 
                                                 // and average to surface 
                                                 // (3*k/Dtot^2).
                                                 // Note that heat conductances (W/K) 
                                                 // must be divided by the volume
                                                 // of the entire structure.
                                                 // There must be one more conductance 
                                                 // than the number of nodes 
                                                 // (see explanation in class)
            rhoCp               (5357692); // for each node
            volumeFractions     (1); // Frction of the volume of the structure 
                                     // occupied by each node 
            powerFractions      (1); // Fraction of total power in the strucure
                                     // that goes to each node
            T0                  900; // Initial temperature, if no found in
                                     // the time folder
        }
/*
        // 1.5cm of heated graphite + 0.5cm of non-heated graphite
        // 30W/mk conductivity
        // For testig purposes. No real physical sense
        powerModel 
        {
            type                lumpedNuclearStructure;
            volumetricArea      40;
            powerDensity        5e6;
            nodesNumber         2;
            nodeFuel            0;
            nodeClad            1;
            heatConductances    (600000          200000              600000);
            // calculated as    - H0 = (6*k/R1/Rtot) with R1=1.5cm and Rtot=2cm
            //                  - H1 = (H_11*H_12)/(H_11*H_22) with:
            //                      H_11 = 3*k/R1/Rtot
            //                      H_12 = k / R2 / Rtot with R2=0.5cm
            //                  - H2 = k / R2 / Rtot 
            rhoCp               (5357692 5357692);
            volumeFractions     (0.75 0.25);
            powerFractions      (1 0);
            T0                  900;
        }
*/
/*
        //1.5cm of heated graphite + 2 slabs of 0.25cm of non-heated graphite
        // 30W/mk conductivity
        // For testig purposes. No real physical sense
        powerModel 
        {
            type                lumpedNuclearStructure;
            volumetricArea      40;
            powerDensity        5e6;
            nodesNumber         3;
            nodeFuel            0;
            nodeClad            1;
            heatConductances    (600000 240000 600000 1200000);
            rhoCp               (5357692 5357692 5357692);
            volumeFractions     (0.75 0.125 0.125);
            powerFractions      (1 0 0);
            T0                  900;
        }
*/
    }
    "hx"
    {
        volumeFraction      0.6;
        Dh                  0.01;

        powerModel
        {
            type            fixedTemperature;
            volumetricArea  200;
            T               900;
        }
    }

    "pump"
    {
        volumeFraction      0;
        Dh                  1;
        momentumSource      (0 0 50000);

        momentumSourceTimeProfile
        {
            type                            table;

            //- Time after which the time table is applied
            startTime                   100;

            //- Left column is time elapsed since the startTime defined
            //  above
            table       table
            (
                (       0       1       )
                (       1       0.818730753077982       )
                (       2       0.670320046035639       )
                (       3       0.548811636094026       )
                (       4       0.449328964117222       )
                (       5       0.367879441171442       )
                (       6       0.301194211912202       )
                (       7       0.246596963941606       )
                (       8       0.201896517994655       )
                (       9       0.165298888221587       )
                (       10      0.135335283236613       )
                (       1000    0.135335283236613       )

            );
        }

    }
}

// ------------------------------------------------------------------------- //
// --- REGIME MAP MODELS --------------------------------------------------- //
// ------------------------------------------------------------------------- //

regimeMapModels
{
}

// ------------------------------------------------------------------------- //
// --- REGIME PHYSICS FOR EACH REGIME -------------------------------------- //
// ------------------------------------------------------------------------- //

physicsModels
{
    dragModels
    {
       "hx:core"
        {
            type     ReynoldsPower;
            coeff   0.5;
            exp     -0.25;
        }
    }

    heatTransferModels
    {
        "core"
        {
            type    NusseltReynoldsPrandtlPower; // const + coeff*Re^expRe*Pr^expPr
            const   0;
            coeff   0.023;
            expRe   0.8;
            expPr   0.4;
        }
        "hx"
        {
            type    constant;
            value   1.85e+4;
        }
    }
}

// ------------------------------------------------------------------------- //
// --- MISCELLANEA --------------------------------------------------------- //
// ------------------------------------------------------------------------- //

pMin                    10000;
pRefCell                0;
pRefValue               100000;

// ************************************************************************* //
