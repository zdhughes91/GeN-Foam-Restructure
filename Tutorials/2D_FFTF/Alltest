#!/bin/bash

# --- Run from this directory
cd ${0%/*} || exit 1

# --- Initialize the output file
resFile=test.out
logFile=log.simulation
rm $resFile $logFile
touch $resFile $logFile

# --- Run the simulation
echo -e "Run tutorial 2D_FFTF ...\n" | tee -a $resFile
./Allrun_parallel >> $logFile
echo -e "Done running tutorial 2D_FFTF ...\n" | tee -a $resFile

# --- Check it ran
isConverge()
{
    folder=$1
    name=$2
    string=$(tail -3 ./$folder/log.GeN-Foam | grep End)
    if [ "$string" = "End" ]; then
        echo -e "$name has converged \n" | tee -a $resFile
    else
        echo -e "$name has NOT converged \n" | tee -a $resFile
        exit 1
    fi
}

isConverge steadyState "Energy steady state"
isConverge transient   "Transient"

# --- Recover the results
extract()
{
    value=$(
        grep -e "$1" ./transient/log.GeN-Foam |
        tail -1 |
        egrep -o "[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?."
    )
    echo $value
}

reactivityDoppler=$(extract "-> Doppler")
reactivityClad=$(extract "-> TClad")
reactivityDensity=$(extract "-> rhoCool")
reactivityStructures=$(extract "-> TStruct")
reactivityDriveline=$(extract "-> driveline")
reactivityGEM=$(extract "-> GEM")
totalPower=$(extract "totalPower")

expectedDoppler=237.1212
expectedClad=0.8156143
expectedDensity="-2.789199"
expectedStructures="-1.10996"
expectedDriveline="-8.96642"
expectedGEM="-464.8488"
expectedTotalPower=29388.48


# --- Check that results are correct
isInRange()
{
    ref=$1
    value=$2
    error=$3
    valueMin=$(bc -l <<<"$value*(1-$error)")
    valueMax=$(bc -l <<<"$value*(1+$error)")
    if (( $(echo "$valueMin <= $ref && $ref <= $valueMax" | bc -l) )); then
        echo 0
    elif (( $(echo "$valueMax <= $ref && $ref <= $valueMin" | bc -l) )); then
        echo 0
    else
        echo 1
    fi
}

error=0.01
echo "Reactivity contributions with $error relative error" | tee -a $resFile
if  [ $(isInRange $expectedDoppler    $reactivityDoppler    $error) -eq 0 ] &&
    [ $(isInRange $expectedClad       $reactivityClad       $error) -eq 0 ] &&
    [ $(isInRange $expectedDensity    $reactivityDensity    $error) -eq 0 ] &&
    [ $(isInRange $expectedStructures $reactivityStructures $error) -eq 0 ] &&
    [ $(isInRange $expectedDriveline  $reactivityDriveline  $error) -eq 0 ] &&
    [ $(isInRange $expectedGEM        $reactivityGEM        $error) -eq 0 ] &&
    [ $(isInRange $expectedTotalPower $totalPower           $error) -eq 0 ]
then
    echo "Perfect match:" | tee -a $resFile
    echo "                  | Simulated | Expected" | tee -a $resFile
    echo "     Doppler      | $reactivityDoppler | $expectedDoppler" | tee -a $resFile
    echo "     Cladding     | $reactivityClad | $expectedClad" | tee -a $resFile
    echo "     Density      | $reactivityDensity | $expectedDensity" | tee -a $resFile
    echo "     Structures   | $reactivityStructures | $expectedStructures" | tee -a $resFile
    echo "     Driveline    | $reactivityDriveline | $expectedDriveline" | tee -a $resFile
    echo "     GEM          | $reactivityGEM | $expectedGEM" | tee -a $resFile
    echo "     Total power  | $totalPower | $expectedTotalPower " | tee -a $resFile
else
    echo "Divergent results:" | tee -a $resFile
    echo "                  | Simulated | Expected" | tee -a $resFile
    echo "     Doppler      | $reactivityDoppler | $expectedDoppler" | tee -a $resFile
    echo "     Cladding     | $reactivityClad | $expectedClad" | tee -a $resFile
    echo "     Density      | $reactivityDensity | $expectedDensity" | tee -a $resFile
    echo "     Structures   | $reactivityStructures | $expectedStructures" | tee -a $resFile
    echo "     Driveline    | $reactivityDriveline | $expectedDriveline" | tee -a $resFile
    echo "     GEM          | $reactivityGEM | $expectedGEM" | tee -a $resFile
    echo "     Total power  | $totalPower | $expectedTotalPower " | tee -a $resFile
    exit 1
fi

# --- Exit successfully
exit 0
