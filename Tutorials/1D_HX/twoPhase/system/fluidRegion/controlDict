/*--------------------------------*- C++ -*----------------------------------*\
|       ______          _   __           ______                               |
|      / ____/  ___    / | / /          / ____/  ____   ____ _   ____ ___     |
|     / / __   / _ \  /  |/ /  ______  / /_     / __ \ / __ `/  / __ `__ \    |
|    / /_/ /  /  __/ / /|  /  /_____/ / __/    / /_/ // /_/ /  / / / / / /    |
|    \____/   \___/ /_/ |_/          /_/       \____/ \__,_/  /_/ /_/ /_/     |
|    Copyright (C) 2015 - 2022 EPFL                                           |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
application     FFSEulerFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         15;

deltaT          0.0001;

writeControl    adjustableRunTime;

writeInterval   1;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

solveEnergy     true;

includeKineticEnergy false;

writeRestartFields true;

writeContinuityErrors true;

adjustTimeStep  true;

maxDeltaT       0.01;

minDeltaT       1e-4;

maxCo           10;

maxCoTwoPhase   0.5;

functions
{
    inletPValues
    {
        type            surfaceFieldValue;
        libs            ( "libfieldFunctionObjects.so" );
        log             true;
        writeFields     false;
        regionType      patch;
        name            inletP;
        operation       average;
        fields          
        ( alphaRhoPhi.liquid alphaRhoPhi.vapour T.liquid T.vapour );
    }
    inletSValues
    {
        type            surfaceFieldValue;
        libs            ( "libfieldFunctionObjects.so" );
        log             true;
        writeFields     false;
        regionType      patch;
        name            inletS;
        operation       average;
        fields          
        ( alphaRhoPhi.liquid alphaRhoPhi.vapour T.liquid T.vapour );
    }
    outletPValues
    {
        type            surfaceFieldValue;
        libs            ( "libfieldFunctionObjects.so" );
        log             true;
        writeFields     false;
        regionType      patch;
        name            outletP;
        operation       average;
        fields          
        ( alphaRhoPhi.liquid alphaRhoPhi.vapour T.liquid T.vapour );
    }
    outletSValues
    {
        type            surfaceFieldValue;
        libs            ( "libfieldFunctionObjects.so" );
        log             true;
        writeFields     false;
        regionType      patch;
        name            outletS;
        operation       average;
        fields          
        ( alphaRhoPhi.liquid alphaRhoPhi.vapour T.liquid T.vapour );
    }
}

// ************************************************************************* //
