/*--------------------------------*- C++ -*----------------------------------*\
|       ______          _   __           ______                               |
|      / ____/  ___    / | / /          / ____/  ____   ____ _   ____ ___     |
|     / / __   / _ \  /  |/ /  ______  / /_     / __ \ / __ `/  / __ `__ \    |
|    / /_/ /  /  __/ / /|  /  /_____/ / __/    / /_/ // /_/ /  / / / / / /    |
|    \____/   \___/ /_/ |_/          /_/       \____/ \__,_/  /_/ /_/ /_/     |
|    Copyright (C) 2015 - 2022 EPFL                                           |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    p_rgh
    {
        solver          GAMG;
        smoother        DIC;
        tolerance       1e-6;
        relTol          0;
    }

    p_rghFinal
    {
        $p_rgh;
        relTol          0;
    }

    "e.*"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-6;
        relTol          0;
        minIter         1;
    }

    "h.*"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-6;
        relTol          0;
        minIter         1;
    }

    ".*"
    {
        solver          PBiCGStab;
        preconditioner  diagonal;
        tolerance       1e-06;
        relTol          0.001;
    }

    //- "Solver" dictionary of the phase fraction equations. The employed
    //  algorithm is MULES. This dict serves to specify options for subcycling.
    //  Subcycling consists in solving a fully explicit equation (except for
    //  the time derivative term, which is hardcoded to be forward-Euler) for
    //  N times with a time step reduced by a factor N. This is useful for
    //  advection problems (such as the phase fraction equations, i.e. the 
    //  continuity equations) that might have strong Courant limitations, such
    //  as the phase fraction equations.
    alpha
    {
        //- If true, the number of times the phase fraction equations are
        //  are solved is determined by the Co. In particular, the number
        //  of subCycles is set to ceil(Co/alphaMaxCo) with Co being the
        //  current global courant number.
        adjustSubCycles     true;
        
        //- Maximum subCycle Courant
        alphaMaxCo          0.20;

        //- If provided, limits the maximum amount of subCycles that can be
        //  performed if adjustSubCycles is true
        //maxSubCycles M; 

        //- Only used if adjustSubCycles is false. Defaults to 1.
        //nSubCycles   N; 
    }
}

PIMPLE
{
    nCorrectors      3;
    nNonOrthogonalCorrectors 0;
    //- partialEliminationMode      implicit;
    momentumMode                faceCentered;
}

relaxationFactors
{
    equations
    {
        ".*"            1;
    }

    //- The two most important relaxation factors for explicitly coupled
    //  two-phase flows with phaseChange
    fields
    {
        //- Under-relaxation of the mass transfer term
        "dmdt"              0.25;

        //- Under-relaxation of the interfacial temperature between the fluids.
        //  This only has an effect if the employed saturationModel in
        //  phaseProperties is not constant (e.g. BrowningPotter). In
        //  particular, this is required as rapid changes in pressure during 
        //  boiling will more often than not induce sharp changes in the
        //  interfacialTemperature, resulting in massive changes in the mass
        //  transfer term 
        "iT12"              0.25;
    }
}

// ************************************************************************* //
